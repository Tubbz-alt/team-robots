// Generated by CoffeeScript 1.10.0
(function() {
  var FB_BASE, JUMP_BTN_TEXT, LANG, LZ_UID, SUBMIT_BTN_TEXT, SUBMIT_DEFAULT_TEXT, TITLE, USERNAME, _lz_src, collect_data, fill_options, format_time_str, get_bbs_post_status, get_post_content, render_jump_button, render_submit_button, render_waitting_label, submit_bugz, submit_click_event, url_params,
    hasProp = {}.hasOwnProperty;

  url_params = $.parseParams(location.search.substr(1));

  FB_BASE = "http://feedback.deepin.org";

  SUBMIT_BTN_TEXT = "提交";

  SUBMIT_DEFAULT_TEXT = "-- 提交到feedback --";

  JUMP_BTN_TEXT = "跳到feedback";

  USERNAME = $(".username").text();

  _lz_src = $(".thread-info img").attr("src");

  LZ_UID = parseInt(/.*uid=(\d+).*/.exec(_lz_src)[1]);

  TITLE = $("#thread_subject").text().trim();

  LANG = $.cookie("deepin_language");

  get_bbs_post_status = function() {
    var onsuccess, search_url;
    onsuccess = function(data) {
      var fb_id, fb_url, found, i, item, len;
      found = false;
      fb_id = 0;
      for (i = 0, len = data.length; i < len; i++) {
        item = data[i];
        if (item.uid === LZ_UID && item.title.trim() === TITLE) {
          found = true;
          fb_id = item.id;
          break;
        }
      }
      if (found) {
        fb_url = FB_BASE + "/feedback/detail/" + fb_id;
        return render_jump_button(fb_url);
      } else {
        return render_submit_button();
      }
    };
    search_url = FB_BASE + "/feedback/bbshint?word=" + TITLE;
    return $.get(search_url).then(function(data) {
      return onsuccess(data);
    });
  };

  render_jump_button = function(url) {
    var btn;
    btn = $(document.createElement("button"));
    btn.click(function() {
      return window.open(url);
    });
    btn.addClass("bugz_jump DTask_tag");
    btn.text(JUMP_BTN_TEXT);
    return $(".thread-info > h1").append(btn);
  };

  render_submit_button = function() {
    var btn, select;
    select = $(document.createElement("select"));
    select.attr({
      "id": "DTask_bugz_component_select"
    });
    select.addClass("DTask_tag");
    fill_options(select);
    $(".thread-info > h1").append(select);
    btn = $(document.createElement("button"));
    btn.attr({
      "id": "DTask_bugz_submit_btn"
    });
    btn.text("提交");
    btn.addClass("bugz_submit DTask_tag");
    btn.click(submit_click_event);
    return $(".thread-info > h1").append(btn);
  };

  get_post_content = function() {
    var content, content_list, contents, text_nodes;
    contents = $(".main").find(".t_f").contents();
    text_nodes = contents.filter(function() {
      return this.nodeType === Node.TEXT_NODE;
    });
    content = "";
    text_nodes.each(function() {
      return content += this.nodeValue;
    });
    content_list = content.split("\n").filter(function(value) {
      return value.trim() !== "";
    });
    content = content_list.join("\n");
    return content;
  };

  collect_data = function() {
    var component, ctime, desc_tag, files, i, img, len, path, ref, src, text;
    ctime = format_time_str(new Date());
    desc_tag = "\n\n --- from: " + location.href;
    text = get_post_content() + desc_tag;
    component = $('#DTask_bugz_component_select option:selected').val();
    files = [];
    ref = $(".main").find(".t_f").find("img");
    for (i = 0, len = ref.length; i < len; i++) {
      img = ref[i];
      src = img.getAttribute("file");
      path = location.origin + "/" + src;
      files.push(path);
    }
    return {
      "uid": LZ_UID,
      "ctime": ctime,
      "title": TITLE,
      "content": text,
      "type": component,
      "files": files
    };
  };

  format_time_str = function(d) {
    var _transfer, date, hours, minutes, month;
    _transfer = function(datetime_str) {
      var string;
      string = "" + datetime_str;
      if (string.length === 1) {
        string = "0" + string;
      }
      return string;
    };
    month = _transfer(d.getMonth() + 1);
    date = _transfer(d.getDate());
    hours = _transfer(d.getHours());
    minutes = _transfer(d.getMinutes());
    return (d.getFullYear()) + "-" + month + "-" + date + " " + hours + ":" + minutes;
  };

  submit_bugz = function(params) {
    var url;
    console.log(params);
    url = FB_BASE + "/postfrombbs";
    return $.ajax({
      type: "post",
      url: url,
      data: JSON.stringify(params),
      headers: {
        "Content-Type": "application/json"
      },
      success: function(data) {
        console.log("finish submitting to feedback");
        console.log(data);
        if (data.ret === 1) {
          return location.reload();
        } else {
          return $("#DTask_waiting").text("(DTask: 提交失败，" + data.message + ")");
        }
      }
    });
  };

  render_waitting_label = function() {
    var waiting;
    $(".DTask_tag").remove();
    waiting = $(document.createElement("label"));
    waiting.attr({
      "id": "DTask_waiting"
    });
    waiting.text("bug提交中...");
    waiting.addClass("bugz_waiting DTask_tag");
    return $(".thread-info > h1").append(waiting);
  };

  fill_options = function(select) {
    var default_name, fb_type_url, option;
    option = $(document.createElement("option"));
    default_name = SUBMIT_DEFAULT_TEXT;
    option.text(default_name);
    option.attr({
      "value": "none"
    });
    select.append(option);
    fb_type_url = FB_BASE + "/feedback/bbstype";
    return $.get(fb_type_url).then(function(data) {
      var key, lang, ref, results, value;
      lang = LANG === "zh-cn" ? "zh_cn" : "en";
      ref = data[lang];
      results = [];
      for (key in ref) {
        if (!hasProp.call(ref, key)) continue;
        value = ref[key];
        option = $(document.createElement("option"));
        option.text(value);
        option.attr({
          "value": value
        });
        results.push(select.append(option));
      }
      return results;
    });
  };

  submit_click_event = function() {
    var params;
    params = collect_data();
    render_waitting_label();
    return submit_bugz(params);
  };

  $.get("https://tools.deepin.io/dtask/plugin/services/bbs2bugzilla/admin_users").then(function(data) {
    data = $.parseJSON(data);
    if (data["users"].indexOf(USERNAME) !== -1) {
      return get_bbs_post_status();
    }
  });

  console.log("bbs extension loaded");

}).call(this);
