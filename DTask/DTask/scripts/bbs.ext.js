// Generated by CoffeeScript 1.9.3
(function() {
  var BUGZ_DEFAULT_PRODUCT_NAME, BUGZ_RPC_URL, JUMP_BTN_TEXT, SUBMIT_BTN_TEXT, SUBMIT_DEFAULT_TEXT, bugz_submit_click_event, call_jsonrpc, check_user_exist, collect_data, create_user, fill_options, get_bbs_post_status, render_jump_button, render_submit_button, render_waitting_label, submit_bugz, update_bugz, url_params, username;

  BUGZ_RPC_URL = "https://bugzilla.deepin.io/jsonrpc.cgi";

  SUBMIT_BTN_TEXT = "提交";

  SUBMIT_DEFAULT_TEXT = "-- 提交到bugzilla --";

  JUMP_BTN_TEXT = "跳到bugzilla";

  BUGZ_DEFAULT_PRODUCT_NAME = "用户反馈";

  url_params = $.parseParams(location.search.substr(1));

  get_bbs_post_status = function() {
    var method, onsuccess, params, tid, url;
    method = "Bug.search";
    tid = url_params["tid"];
    url = location.origin + location.pathname + "?mod=viewthread&tid=" + tid;
    params = {
      "url": url
    };
    onsuccess = function(data) {
      var bugz_id, bugz_url;
      if (data.result.bugs.length) {
        bugz_id = data.result.bugs[0].id;
        bugz_url = "https://bugzilla.deepin.io/show_bug.cgi?id=" + bugz_id;
        return render_jump_button(bugz_url);
      } else {
        return render_submit_button();
      }
    };
    return call_jsonrpc(method, params, onsuccess);
  };

  render_jump_button = function(bugz_url) {
    var btn;
    btn = $(document.createElement("button"));
    btn.click(function() {
      return window.open(bugz_url);
    });
    btn.addClass("bugz_jump DTask_tag");
    btn.text(JUMP_BTN_TEXT);
    return $(".thread-info > h1").append(btn);
  };

  render_submit_button = function() {
    var btn, select;
    select = $(document.createElement("select"));
    select.attr({
      "id": "DTask_bugz_component_select"
    });
    select.addClass("DTask_tag");
    fill_options(select);
    $(".thread-info > h1").append(select);
    btn = $(document.createElement("button"));
    btn.attr({
      "id": "DTask_bugz_submit_btn"
    });
    btn.text("提交");
    btn.addClass("bugz_submit DTask_tag");
    btn.click(bugz_submit_click_event);
    return $(".thread-info > h1").append(btn);
  };

  collect_data = function() {
    var cclist, component, desc_tag, email, params, product, profile_source, re, re_list, text, tid, title, url;
    cclist = ["tangcaijun@linuxdeepin.com"];
    profile_source = "";
    $.ajax({
      url: location.origin + "/" + ($(".thread_tp .author > .xi2").attr("href")),
      async: false,
      success: function(data) {
        return profile_source = data;
      },
      error: function(data) {
        console.error("DTask err: failed to get email when getting profile source");
        return console.log(data);
      }
    });
    re = /<li><em>Email<\/em>([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+.[a-zA-Z0-9_-]+)<\/li>/;
    re_list = re.exec(profile_source);
    if ((re_list != null ? re_list.length : void 0) > 1) {
      email = re_list[1];
      cclist = [email];
    }
    title = $("#thread_subject").text();
    tid = url_params["tid"];
    desc_tag = "\n\n --- from " + location.href + " --- ";
    text = $(".main").find(".t_f").text() + desc_tag;
    url = location.origin + location.pathname + "?mod=viewthread&tid=" + tid;
    product = BUGZ_DEFAULT_PRODUCT_NAME;
    component = $('#DTask_bugz_component_select option:selected').val();
    console.log("DTask debug: bug submit: ", product, component, "cclist:", cclist);
    params = {
      "product": product,
      "component": component,
      "summary": title,
      "description": text,
      "cc": cclist,
      "url": url
    };
    return params;
  };

  submit_bugz = function(bugz_info) {
    var bbs_url, onsuccess;
    bbs_url = bugz_info["url"];
    delete bugz_info["url"];
    onsuccess = function(data) {
      var bugz_id, update_bugz_info;
      console.log("== submit bug ==");
      console.log(data);
      if (data.result) {
        bugz_id = data.result.id;
        update_bugz_info = {
          "ids": [bugz_id],
          "url": bbs_url
        };
        return update_bugz(update_bugz_info);
      } else {
        return console.error("DTask err: failed to create bugz");
      }
    };
    bugz_info["version"] = "1.0";
    return call_jsonrpc("Bug.create", bugz_info, onsuccess);
  };

  update_bugz = function(bugz_info) {
    var onsuccess;
    onsuccess = function() {
      $(".DTask_tag").remove();
      return get_bbs_post_status();
    };
    return call_jsonrpc("Bug.update", bugz_info, onsuccess);
  };

  render_waitting_label = function() {
    var waiting;
    $(".DTask_tag").remove();
    waiting = $(document.createElement("label"));
    waiting.attr({
      "id": "DTask_waiting"
    });
    waiting.text("bug提交中...");
    waiting.addClass("bugz_waiting DTask_tag");
    return $(".thread-info > h1").append(waiting);
  };

  call_jsonrpc = function(method, params, func_success, func_error, async) {
    var data_str;
    if (!func_success) {
      func_success = function(data) {
        console.log("call jsonrpc response success");
        return console.log(data);
      };
    }
    if (!func_error) {
      func_error = function(data) {
        console.log("call jsonrpc response error");
        return console.log(data);
      };
    }
    if (async === void 0) {
      async = true;
    }
    data_str = "{\"method\":\"" + method + "\",\"params\":" + (JSON.stringify(params)) + ",\"version\":\"2.0\"}";
    return $.ajax(BUGZ_RPC_URL, {
      type: "POST",
      async: async,
      contentType: "application/json-rpc",
      data: data_str,
      success: func_success,
      error: func_error
    });
  };

  fill_options = function(select) {
    var default_name, onsuccess, option, params;
    params = {
      "names": [BUGZ_DEFAULT_PRODUCT_NAME]
    };
    option = $(document.createElement("option"));
    default_name = SUBMIT_DEFAULT_TEXT;
    option.text(default_name);
    option.attr({
      "value": "none"
    });
    select.append(option);
    onsuccess = function(data) {
      var i, item, len, name, ref, results;
      if (data.result && data.result.products.length > 0) {
        ref = data.result.products[0].components;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          item = ref[i];
          name = item["name"];
          option = $(document.createElement("option"));
          option.text(name);
          option.attr({
            "value": name
          });
          results.push(select.append(option));
        }
        return results;
      } else {
        console.error("DTask err: failed to get product component");
        return console.log(data);
      }
    };
    call_jsonrpc("Product.get", params, onsuccess);
    return select;
  };

  bugz_submit_click_event = function() {
    var bugz_info, cc_list;
    bugz_info = collect_data();
    render_waitting_label();
    cc_list = bugz_info["cc"];
    return check_user_exist(cc_list[0]).then(function() {
      return submit_bugz(bugz_info);
    });
  };

  check_user_exist = function(user) {
    return call_jsonrpc("User.get", {
      "names": user
    }).then(function(data) {
      var ref;
      console.log("== check user ==");
      console.log(data);
      if (((ref = data.result) != null ? ref.users.length : void 0) > 0) {
        return data;
      } else {
        return create_user(user);
      }
    });
  };

  create_user = function(user) {
    var onsuccess;
    onsuccess = function(data) {
      console.log("== create user ==");
      console.log(data);
      return data;
    };
    return call_jsonrpc("User.create", {
      "email": user
    }, onsuccess);
  };

  username = $(".username").text();

  $.get("https://tools.deepin.io/dtask/plugin/services/bbs2bugzilla/admin_users").then(function(data) {
    data = $.parseJSON(data);
    if (data["users"].indexOf(username) !== -1) {
      return get_bbs_post_status();
    }
  });

  console.log("bbs extension loaded");

}).call(this);
